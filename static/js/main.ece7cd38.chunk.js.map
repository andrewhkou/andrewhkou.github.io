{"version":3,"sources":["PersonalWebsite.js","serviceWorker.js","index.js"],"names":["PersonalWebsite","props","switchTheme","bind","event","target","checked","document","documentElement","setAttribute","localStorage","setItem","className","href","htmlFor","type","id","onClick","e","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kQAiEeA,G,kBAtDb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,YAAc,EAAKA,YAAYC,KAAjB,gBAFF,E,yEAKPC,GACMA,EAAMC,OAAOC,SAGzBC,SAASC,gBAAgBC,aAAa,aAAc,QACpDC,aAAaC,QAAQ,QAAS,UAG9BJ,SAASC,gBAAgBC,aAAa,aAAc,SACpDC,aAAaC,QAAQ,QAAS,Y,+BAI1B,IAAD,OACP,OACE,yBAAKC,UAAY,qBACf,yBAAKA,UAAY,WACf,yBAAKA,UAAY,mBACf,0BAAMA,UAAY,QAAlB,gBADF,qBAGA,yBAAKA,UAAY,iBAAjB,kDAGA,wBAAIA,UAAY,gBACd,qEAAgC,0BAAMA,UAAW,UAAS,uBAAGA,UAAU,cAAcC,KAAK,4BAA4BR,OAAO,UAAnE,iBAC1D,2EAAsC,0BAAMO,UAAW,YAAW,uBAAGA,UAAW,cAAcC,KAAK,iCAAiCR,OAAO,UAAzE,cAClE,4EAAwB,0BAAMO,UAAY,UAAS,uBAAGA,UAAW,cAAcC,KAAK,4BAA4BR,OAAO,UAApE,cACnD,wEAAmC,0BAAMO,UAAW,OAAM,uBAAGA,UAAW,cAAcC,KAAK,iCAAiCR,OAAO,UAAzE,SAC1D,oFAEF,yBAAKO,UAAY,mBACf,yBAAKA,UAAY,SACf,uBAAGA,UAAU,YAAYC,KAAK,qFAAqFR,OAAO,UAA1H,UACA,uBAAGO,UAAU,YAAYC,KAAK,mCAAmCR,OAAO,UAAxE,YACA,uBAAGO,UAAU,YAAYC,KAAK,gCAAgCR,OAAO,UAArE,aAIN,yBAAKO,UAAU,wBACb,2BAAOA,UAAU,eAAeE,QAAQ,YACtC,2BAAOC,KAAK,WAAWC,GAAG,WAAWC,QAAS,SAACC,GAAD,OAAO,EAAKhB,YAAYgB,MACtE,yBAAKN,UAAU,wB,GAhDGO,cCGVC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAqBnB,SAASoB,eAAe,SD2HvD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.ece7cd38.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import logo from './oldwebsite/logo.svg';\nimport './PersonalWebsite.css';\n// import Home from './oldwebsite/Home.js';\n// import About from './oldwebsite/About';\n// import Experiences from './oldwebsite/Experiences';\n// import Projects from './oldwebsite/Projects';\n// import Contact from './oldwebsite/Contact'\n// https://drive.google.com/file/d/1nl81_uEtfznoBWYdehQVo5zH52uAhcsC/view?usp=sharing\nclass PersonalWebsite extends Component {\n\n  constructor(props) {\n    super(props);\n    this.switchTheme = this.switchTheme.bind(this);\n  }\n\n  switchTheme(event) {\n    let isChecked = event.target.checked;\n\n    if (isChecked) {\n        document.documentElement.setAttribute('data-theme', 'dark');\n        localStorage.setItem('theme', 'dark');\n    }\n    else {\n        document.documentElement.setAttribute('data-theme', 'light');\n        localStorage.setItem('theme', 'light');\n    }    \n  }\n\n  render() {\n    return (\n      <div className = \"content-container\">\n        <div className = \"content\"> \n          <div className = \"greeting-header\">\n            <span className = \"wave\">üëã</span> Hey! I'm Andrew.\n          </div>\n          <div className = \"greeting-text\">\n            Thanks for stopping by! Here's a bit about me: \n          </div>\n          <ul className = \"about-points\">\n            <li>üìö Third year CS student at <span className =\"school\"><a className=\"about-links\" href=\"https://www.berkeley.edu/\" target=\"_blank\">UC Berkeley</a></span></li>\n            <li>‚öôÔ∏è Developer & Project Manager at <span className =\"codebase\"><a className =\"about-links\" href=\"https://codebase.berkeley.edu/\" target=\"_blank\">Codebase</a></span></li>\n            <li>üë®‚Äçüíª SWE intern at <span className = \"intern\"><a className =\"about-links\" href=\"https://www.doordash.com/\" target=\"_blank\">DoorDash</a></span></li>\n            <li>üìå Former design consultant at <span className =\"uma\"><a className =\"about-links\" href=\"https://www.umaucberkeley.com/\" target=\"_blank\">UMA</a></span></li>\n            <li>üé∏ Amateur music producer & guitar player</li>\n          </ul>\n          <div className = \"links-container\">\n            <div className = \"links\"> \n              <a className=\"link-text\" href=\"https://drive.google.com/file/d/1nl81_uEtfznoBWYdehQVo5zH52uAhcsC/view?usp=sharing\" target=\"_blank\">resume</a>\n              <a className=\"link-text\" href=\"https://www.linkedin.com/in/akou\" target=\"_blank\">linkedin</a>\n              <a className=\"link-text\" href=\"https://github.com/andrewhkou\" target=\"_blank\">github</a>\n            </div> \n          </div>\n        </div>\n        <div className=\"theme-switch-wrapper\">\n          <label className=\"theme-switch\" htmlFor=\"checkbox\">\n            <input type=\"checkbox\" id=\"checkbox\" onClick={(e) => this.switchTheme(e)}/>\n            <div className=\"slider round\"></div>\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PersonalWebsite;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PersonalWebsite from './PersonalWebsite';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PersonalWebsite />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}